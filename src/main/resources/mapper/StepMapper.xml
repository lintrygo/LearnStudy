<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.dao.StepMapper">
  <resultMap id="BaseResultMap" type="com.learn.bean.Step">
    <id column="step_id" jdbcType="INTEGER" property="stepId" />
    <result column="catalog_id" jdbcType="INTEGER" property="catalogId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.learn.bean.Step">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    step_id, catalog_id, title, code, weight, create_id, update_id, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.learn.bean.StepExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.learn.bean.StepExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_step
    where step_id = #{stepId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_step
    where step_id = #{stepId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.learn.bean.StepExample">
    delete from t_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.learn.bean.Step">
    insert into t_step (step_id, catalog_id, title, 
      code, weight, create_id, 
      update_id, create_time, update_time, 
      content)
    values (#{stepId,jdbcType=INTEGER}, #{catalogId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{weight,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, 
      #{updateId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.learn.bean.Step">
    insert into t_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stepId != null">
        step_id,
      </if>
      <if test="catalogId != null">
        catalog_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="catalogId != null">
        #{catalogId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.learn.bean.StepExample" resultType="java.lang.Long">
    select count(*) from t_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_step
    <set>
      <if test="record.stepId != null">
        step_id = #{record.stepId,jdbcType=INTEGER},
      </if>
      <if test="record.catalogId != null">
        catalog_id = #{record.catalogId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_step
    set step_id = #{record.stepId,jdbcType=INTEGER},
      catalog_id = #{record.catalogId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_step
    set step_id = #{record.stepId,jdbcType=INTEGER},
      catalog_id = #{record.catalogId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.bean.Step">
    update t_step
    <set>
      <if test="catalogId != null">
        catalog_id = #{catalogId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.learn.bean.Step">
    update t_step
    set catalog_id = #{catalogId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.bean.Step">
    update t_step
    set catalog_id = #{catalogId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where step_id = #{stepId,jdbcType=INTEGER}
  </update>
  <select id="stepList" resultType="com.learn.pojo.StepListVO">
    select a.step_id stepId,a.title stepTitle,a.content stepContent,a.code stepCode,a.weight stepWeight,
			a.create_time createTime,b.catalog_id catalogId,b.title catalogTitle,c.module_id moduleId,c.name moduleName,
			d.stage_id stageId,d.name stageName,e.course_id courseId,e.name courseName
 from t_step a LEFT JOIN t_catalog b on a.catalog_id=b.catalog_id
 LEFT JOIN t_module c on c.module_id=b.module_id
 LEFT JOIN t_stage d on d.stage_id=c.stage_id
 LEFT JOIN t_course e on e.course_id=d.course_id
    <where>
      <if test="courseId!=null and courseId!=-1">
        and e.course_id=#{courseId}
      </if>
      <if test="stageId!=null and stageId!=-1">
        and d.stage_id=#{stageId}
      </if>
      <if test="moduleId!=null and moduleId!=-1">
        and c.module_id=#{moduleId}
      </if>
      <if test="catalogId!=null and catalogId!=-1">
        and b.catalog_id=#{catalogId}
      </if>
    </where>
 order by e.weight desc,d.weight desc,c.weight desc,b.weight desc,a.weight desc
  </select>
</mapper>